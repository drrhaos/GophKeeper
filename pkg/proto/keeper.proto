syntax = "proto3";

package gophkeeper;

import "google/api/annotations.proto";

option go_package = "gophkeeper/pkg/proto";
// option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
//     info: {
//      title: "HelloService";
//      version: "1.0";
//      contact: {
//       name: "grpc-with-rest";
//       url: "https://github.com/your-username/hello";
//        };
//      };
//      schemes: HTTP;
//      consumes: "application/json";
//      produces: "application/json";
//      responses: {
//      key: "404";
//      value: {
//       description: "Returned when the resource does not exist.";
//       schema: {
//        json_schema: {
//         type: STRING;
//        }
//       }
//      }
//     }
//    };


message RegisterRequest  {
	string login = 1;
    string password = 2;
}

message RegisterResponse {
    string token = 1;
    string error = 2;
  }

message LoginRequest  {
	string login = 1;
    string password = 2;
}

message LoginResponse {
    string token = 1;
    string error = 2;
}

message FieldKeep  {
    string uuid = 1;
    string login = 2;
    string password = 3;
    string data = 4;
    int64 timeUpdate = 5;
    string cardNumber = 6;
    int64 cardCVC = 7;
    string cardDate = 8;
    string cardOwner = 9;
    
}

message SyncRequest {
    string token = 1;
    repeated FieldKeep data = 2;
}

message SyncResponse {
    string token = 1;
    repeated FieldKeep data = 2;
}

service GophKeeper {
    rpc Register (RegisterRequest) returns (RegisterResponse)
    {
        option(google.api.http) = {
         post: "/api/register"
         body: "*"
        };
    };
    rpc Login (LoginRequest) returns (LoginResponse)
    {
        option(google.api.http) = {
         post: "/api/login"
         body: "*"
        };
    };
    rpc SyncData (SyncRequest) returns (SyncResponse)
    {
        option(google.api.http) = {
            post: "/api/sync"
            body: "*"
        };
    };
}
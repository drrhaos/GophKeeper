// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.2
// source: keeper.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	GophKeeper_Register_FullMethodName   = "/gophkeeper.GophKeeper/Register"
	GophKeeper_Login_FullMethodName      = "/gophkeeper.GophKeeper/Login"
	GophKeeper_AddField_FullMethodName   = "/gophkeeper.GophKeeper/AddField"
	GophKeeper_EditField_FullMethodName  = "/gophkeeper.GophKeeper/EditField"
	GophKeeper_DelField_FullMethodName   = "/gophkeeper.GophKeeper/DelField"
	GophKeeper_ListFields_FullMethodName = "/gophkeeper.GophKeeper/ListFields"
	GophKeeper_Upload_FullMethodName     = "/gophkeeper.GophKeeper/Upload"
)

// GophKeeperClient is the client API for GophKeeper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GophKeeperClient interface {
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	AddField(ctx context.Context, in *AddFieldKeepRequest, opts ...grpc.CallOption) (*AddFieldKeepResponse, error)
	EditField(ctx context.Context, in *EditFieldKeepRequest, opts ...grpc.CallOption) (*EditFieldKeepResponse, error)
	DelField(ctx context.Context, in *DeleteFieldKeepRequest, opts ...grpc.CallOption) (*DeleteFieldKeepResponse, error)
	ListFields(ctx context.Context, in *ListFieldsKeepRequest, opts ...grpc.CallOption) (*ListFielsdKeepResponse, error)
	Upload(ctx context.Context, opts ...grpc.CallOption) (GophKeeper_UploadClient, error)
}

type gophKeeperClient struct {
	cc grpc.ClientConnInterface
}

func NewGophKeeperClient(cc grpc.ClientConnInterface) GophKeeperClient {
	return &gophKeeperClient{cc}
}

func (c *gophKeeperClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, GophKeeper_Register_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, GophKeeper_Login_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) AddField(ctx context.Context, in *AddFieldKeepRequest, opts ...grpc.CallOption) (*AddFieldKeepResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AddFieldKeepResponse)
	err := c.cc.Invoke(ctx, GophKeeper_AddField_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) EditField(ctx context.Context, in *EditFieldKeepRequest, opts ...grpc.CallOption) (*EditFieldKeepResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(EditFieldKeepResponse)
	err := c.cc.Invoke(ctx, GophKeeper_EditField_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) DelField(ctx context.Context, in *DeleteFieldKeepRequest, opts ...grpc.CallOption) (*DeleteFieldKeepResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteFieldKeepResponse)
	err := c.cc.Invoke(ctx, GophKeeper_DelField_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) ListFields(ctx context.Context, in *ListFieldsKeepRequest, opts ...grpc.CallOption) (*ListFielsdKeepResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListFielsdKeepResponse)
	err := c.cc.Invoke(ctx, GophKeeper_ListFields_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophKeeperClient) Upload(ctx context.Context, opts ...grpc.CallOption) (GophKeeper_UploadClient, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	stream, err := c.cc.NewStream(ctx, &GophKeeper_ServiceDesc.Streams[0], GophKeeper_Upload_FullMethodName, cOpts...)
	if err != nil {
		return nil, err
	}
	x := &gophKeeperUploadClient{ClientStream: stream}
	return x, nil
}

type GophKeeper_UploadClient interface {
	Send(*FileUploadRequest) error
	CloseAndRecv() (*FileUploadResponse, error)
	grpc.ClientStream
}

type gophKeeperUploadClient struct {
	grpc.ClientStream
}

func (x *gophKeeperUploadClient) Send(m *FileUploadRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gophKeeperUploadClient) CloseAndRecv() (*FileUploadResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(FileUploadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GophKeeperServer is the server API for GophKeeper service.
// All implementations must embed UnimplementedGophKeeperServer
// for forward compatibility
type GophKeeperServer interface {
	Register(context.Context, *RegisterRequest) (*RegisterResponse, error)
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	AddField(context.Context, *AddFieldKeepRequest) (*AddFieldKeepResponse, error)
	EditField(context.Context, *EditFieldKeepRequest) (*EditFieldKeepResponse, error)
	DelField(context.Context, *DeleteFieldKeepRequest) (*DeleteFieldKeepResponse, error)
	ListFields(context.Context, *ListFieldsKeepRequest) (*ListFielsdKeepResponse, error)
	Upload(GophKeeper_UploadServer) error
	mustEmbedUnimplementedGophKeeperServer()
}

// UnimplementedGophKeeperServer must be embedded to have forward compatible implementations.
type UnimplementedGophKeeperServer struct {
}

func (UnimplementedGophKeeperServer) Register(context.Context, *RegisterRequest) (*RegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (UnimplementedGophKeeperServer) Login(context.Context, *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (UnimplementedGophKeeperServer) AddField(context.Context, *AddFieldKeepRequest) (*AddFieldKeepResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddField not implemented")
}
func (UnimplementedGophKeeperServer) EditField(context.Context, *EditFieldKeepRequest) (*EditFieldKeepResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditField not implemented")
}
func (UnimplementedGophKeeperServer) DelField(context.Context, *DeleteFieldKeepRequest) (*DeleteFieldKeepResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelField not implemented")
}
func (UnimplementedGophKeeperServer) ListFields(context.Context, *ListFieldsKeepRequest) (*ListFielsdKeepResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFields not implemented")
}
func (UnimplementedGophKeeperServer) Upload(GophKeeper_UploadServer) error {
	return status.Errorf(codes.Unimplemented, "method Upload not implemented")
}
func (UnimplementedGophKeeperServer) mustEmbedUnimplementedGophKeeperServer() {}

// UnsafeGophKeeperServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GophKeeperServer will
// result in compilation errors.
type UnsafeGophKeeperServer interface {
	mustEmbedUnimplementedGophKeeperServer()
}

func RegisterGophKeeperServer(s grpc.ServiceRegistrar, srv GophKeeperServer) {
	s.RegisterService(&GophKeeper_ServiceDesc, srv)
}

func _GophKeeper_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GophKeeper_Register_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GophKeeper_Login_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_AddField_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFieldKeepRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).AddField(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GophKeeper_AddField_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).AddField(ctx, req.(*AddFieldKeepRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_EditField_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditFieldKeepRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).EditField(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GophKeeper_EditField_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).EditField(ctx, req.(*EditFieldKeepRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_DelField_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFieldKeepRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).DelField(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GophKeeper_DelField_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).DelField(ctx, req.(*DeleteFieldKeepRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_ListFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFieldsKeepRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophKeeperServer).ListFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GophKeeper_ListFields_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophKeeperServer).ListFields(ctx, req.(*ListFieldsKeepRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GophKeeper_Upload_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GophKeeperServer).Upload(&gophKeeperUploadServer{ServerStream: stream})
}

type GophKeeper_UploadServer interface {
	SendAndClose(*FileUploadResponse) error
	Recv() (*FileUploadRequest, error)
	grpc.ServerStream
}

type gophKeeperUploadServer struct {
	grpc.ServerStream
}

func (x *gophKeeperUploadServer) SendAndClose(m *FileUploadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gophKeeperUploadServer) Recv() (*FileUploadRequest, error) {
	m := new(FileUploadRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GophKeeper_ServiceDesc is the grpc.ServiceDesc for GophKeeper service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GophKeeper_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "gophkeeper.GophKeeper",
	HandlerType: (*GophKeeperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _GophKeeper_Register_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _GophKeeper_Login_Handler,
		},
		{
			MethodName: "AddField",
			Handler:    _GophKeeper_AddField_Handler,
		},
		{
			MethodName: "EditField",
			Handler:    _GophKeeper_EditField_Handler,
		},
		{
			MethodName: "DelField",
			Handler:    _GophKeeper_DelField_Handler,
		},
		{
			MethodName: "ListFields",
			Handler:    _GophKeeper_ListFields_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Upload",
			Handler:       _GophKeeper_Upload_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "keeper.proto",
}
